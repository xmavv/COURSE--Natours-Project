.card {

    // FUNCTIONALITY
    height: 52rem;
    width: 30%;
    perspective: 1500px;
    -moz-perspective: 150rem; // mozilla fix
    // perspective has to be on parent, czyli tutaj mamy transform na hover, wiec na rodzicu robimy
    // perspektywe
    position: relative;

    @include respond (tab-port) {
        width: 100%;
        max-width: 50rem;
        justify-content: center;
        align-items: center;
        padding: 0 3rem;
    }

    &__side {
        height: 52rem;
        transition: all .8s ease;
        position: absolute;
        // wyrzucamy je i sa absolutne wiec ich rodzic nie ma wysokosci wiec po prostu mu nadajemy
        // pierwszy selektor z gory height: 50rem;
        top: 0;
        left: 0;
        width: 100%;
        // nie zobaczymy tylnej czesci
        backface-visibility: hidden;
        @include box-shadow;

        &--front {
            background-color: $color-white;
        }

        &--back {
            transform: rotateY(180deg);
            // musimy odwrocic, bo z naszej perspektywy z przodu, nasza karta jest juz odwrocona
            // o 180 stopni
            &-1 {
                background-image: linear-gradient(to right bottom, $color-secondary-light, $color-secondary-dark);
            }

            &-2 {
                background-image: linear-gradient(to right bottom, $color-primary-light, $color-primary-dark);
            }

            &-3 {
                background-image: linear-gradient(to right bottom, $color-tertiary-light, $color-tertiary-dark);
            }
        }
    }

    // when we hover the card, we want the side to transform
    &:hover &__side--front{
        transform: rotateY(-180deg);
    }

    &:hover &__side--back{
        transform: rotateY(0);
    }

    // FRONT SITE STYLING
    &__picture {
        background-size: cover;
        height: 23rem;
        background-blend-mode: screen;
        -webkit-clip-path: polygon(0 0, 100% 0, 100% 90%, 0 100%);
        clip-path: polygon(0 0, 100% 0, 100% 90%, 0 100%);

        &--1 {
            // tylko jeden poziom do gory bo przeciez to jest kompilowane w css potem
            background-image: linear-gradient(to right bottom, $color-secondary-light, $color-secondary-dark), 
            url(../img/nat-5.jpg);
        }

        &--2 {
            background-image: linear-gradient(to right bottom, $color-primary-light, $color-primary-dark),
            url(../img/nat-6.jpg);
        }

        &--3 {
            background-image: linear-gradient(to right bottom, $color-tertiary-light, $color-tertiary-dark),
            url(../img/nat-7.jpg);
        }
    }

    &__heading {
        font-size: 2.8rem;
        font-weight: 300;
        text-transform: uppercase;
        text-align: right;
        color: $color-white;
        position: absolute;
        top: 12rem;
        right: 2rem;
        width: 75%;
    }

    // to nie dziecko headingu, to jest nowy element, nie modifier, i nie element headingu, nowy element
    // w bem wiec osobny selektor
    &__heading-span {
        padding: 1rem 1.5rem;
        // zeby byl padding po tych stronach po ktorych przycielismy nasz tekst
        -webkit-box-decoration-break: clone;
        box-decoration-break: clone;
        // to robi tyle ze wszystkie style ktore sa w tym selektorze, sa dawane na kazdy
        // pojedynczy box, w tym przypadku tylko padding

        &--1 {
            background-image: linear-gradient(to right bottom,
            rgba($color-secondary-light, .85),
            rgba($color-secondary-dark, .85));
        }

        &--2 {
            background-image: linear-gradient(to right bottom,
            rgba($color-primary-light, .85),
            rgba($color-primary-dark, .85));
        }

        &--3 {
            background-image: linear-gradient(to right bottom,
            rgba($color-tertiary-light, .85),
            rgba($color-tertiary-dark, .85));
        }
    }

    &__details {
        padding: 3rem;

        ul {
            // standard to usuwa kropeczki
            list-style: none;
            width: 80%;
            //centering block element inside block element
            margin: 0 auto;

            li {
                text-align: center;
                font-size: 1.5rem;
                padding: 1rem;

                &:not(:last-child) {
                    border-bottom: 1px solid $color-grey-light-2;
                }
            }
        }
    }

    //BACK SIDE STYLING
    &__cta {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        width: 90%;
        text-align: center;
    }

    &__price-box {
        color: $color-white;
        text-align: center;
        margin-bottom: 8rem;

    }

    &__price-only {
        font-size: 1.4rem;
        text-transform: uppercase;
    }

    &__price-value {
        font-size: 6rem;
        font-weight: 100;
    }
}